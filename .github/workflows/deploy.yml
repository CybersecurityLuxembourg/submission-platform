name: Deploy to Production

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies and build
        run: |
          npm ci
          npm run build
          zip -r build_artifacts.zip public/build

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PRODUCTION_ENV_SSH_PRIVATE_KEY }}
          known_hosts: 'placeholder'
          if_key_exists: replace

      - name: Adding known hosts on source host from bastion host
        run: ssh-keyscan -p ${{ secrets.BASTION_SSH_PORT }} -H ${{ secrets.BASTION_HOST }} >> ~/.ssh/known_hosts

      - name: Adding known hosts on source host from target host
        run: ssh -p ${{ secrets.BASTION_SSH_PORT }} ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_HOST }} ssh-keyscan -H ${{ secrets.PRODUCTION_ENV_HOST }} >> ~/.ssh/known_hosts

      - name: Sync Files to Server
        run: |
          rsync -avz --delete \
          -e "ssh -J ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_HOST }}:${{ secrets.BASTION_SSH_PORT }}" \
          --exclude 'node_modules' \
          --exclude '.git' \
          --exclude '.github' \
          --exclude 'tests' \
          ./ ${{ secrets.SERVER_USERNAME }}@${{ secrets.PRODUCTION_ENV_HOST }}:/var/www/applications.nc3.lu/
      - name: Create Configuration Files and Deploy
        env:
          PANDORA_ENABLED: ${{ secrets.PRODUCTION_PANDORA_ENABLED }}
        run: |
          ssh -J ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_HOST }}:${{ secrets.BASTION_SSH_PORT }} ${{ secrets.SERVER_USERNAME }}@${{ secrets.PRODUCTION_ENV_HOST }} "bash -s" << 'ENDSSH'
          cd /var/www/applications.nc3.lu

          # Create .env file
          cat > .env << 'EOL'
          APP_NAME="NC3's Application Platform"
          APP_ENV=production
          APP_KEY=${{ secrets.APP_KEY }}
          APP_DEBUG=false
          APP_URL=https://applications.nc3.lu
          APP_LOCALE=en
          APP_FALLBACK_LOCALE=en
          APP_FAKER_LOCALE=en_US
          ASSET_URL=https://applications.nc3.lu

          APP_MAINTENANCE_DRIVER=file
          BCRYPT_ROUNDS=12

          LOG_CHANNEL=stack
          LOG_STACK=single
          LOG_DEPRECATIONS_CHANNEL=null
          LOG_LEVEL=debug

          DB_CONNECTION=mysql
          DB_HOST=db
          DB_PORT=3306
          DB_DATABASE=${{ secrets.DB_DATABASE }}
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}

          SESSION_DRIVER=database
          SESSION_LIFETIME=120
          SESSION_ENCRYPT=false
          SESSION_PATH=/
          SESSION_DOMAIN=null
          SESSION_STORE=

          BROADCAST_CONNECTION=log
          FILESYSTEM_DISK=local
          QUEUE_CONNECTION=database

          CACHE_STORE=database
          CACHE_PREFIX=

          MAIL_MAILER=smtp
          MAIL_HOST=mail.mbox.lu
          MAIL_PORT=587
          MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
          MAIL_ENCRYPTION=tls
          MAIL_FROM_ADDRESS=app@nc3.lu
          MAIL_FROM_NAME="NC3's Application Platform"

          VITE_APP_NAME="NC3's Application Platform"
          API_DOCS_ALLOWED_DOMAINS=lhc.lu,circl.lu,nc3.lu
          PANDORA_ENABLED=${{ env.PANDORA_ENABLED }}
          PANDORA_URL=http://pandora:6100
          PANDORA_TIMEOUT=15
          PANDORA_BLOCK_MALICIOUS=true
          EOL
          chmod 644 .env

          # Create docker-compose.env file
          cat > docker-compose.env << 'EOL'
          DB_DATABASE=${{ secrets.DB_DATABASE }}
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}
          PROXY=${{ secrets.PROXY }}
          EOL
          chmod 644 docker-compose.env

          # Extract build artifacts and deploy
          unzip -o build_artifacts.zip
          chmod +x scripts/deploy.sh
          ./scripts/deploy.sh
          ENDSSH

      - name: Optional Pandora installation
        if: env.PANDORA_ENABLED == 'true'
        run: |
          ssh -J ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_HOST }}:${{ secrets.BASTION_SSH_PORT }} \
              ${{ secrets.SERVER_USERNAME }}@${{ secrets.PRODUCTION_ENV_HOST }} \
              "bash /var/www/applications.nc3.lu/scripts/setup-pandora.sh $PANDORA_ENABLED '${{ secrets.PROXY }}'"