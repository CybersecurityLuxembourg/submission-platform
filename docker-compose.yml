version: '3.8'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: laravel_app
        restart: unless-stopped
        volumes:
            - ./:/var/www/html
            - ./storage:/var/www/html/storage
        depends_on:
            - db
        networks:
            - app_network

    nginx:
        image: nginx:stable-alpine
        container_name: laravel_nginx
        restart: unless-stopped
        ports:
            - "8080:80"
        volumes:
            - ./:/var/www/html
            - ./docker/nginx/conf.d:/etc/nginx/conf.d
        depends_on:
            - app
        networks:
            - app_network
    node:
        image: node:18-alpine
        volumes:
            - .:/var/www/html
        working_dir: /var/www/html
        profiles: [ "dev" ]
    db:
        image: mysql:8.0
        container_name: laravel_db
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
        volumes:
            - dbdata:/var/lib/mysql
        networks:
            - app_network

    backup:
        build:
            context: .
            dockerfile: Dockerfile.backup
        container_name: laravel_backup
        volumes:
            - ./:/var/www/html
            - /home/ppa:/backups
        depends_on:
            - db
        networks:
            - app_network

networks:
    app_network:
        driver: bridge

volumes:
    dbdata:
