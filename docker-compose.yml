version: '3.8'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: nc3_app
        restart: unless-stopped
        env_file:
            - docker-compose.env
        environment:
            DB_HOST: db
        volumes:
            - ./:/var/www/html
        depends_on:
            - db
        networks:
            - app_network

    nginx:
        image: nginx:stable-alpine
        container_name: nc3_nginx
        restart: unless-stopped
        ports:
            - "80:80"
        volumes:
            - ./:/var/www/html
            - ./docker/nginx/conf.d:/etc/nginx/conf.d
        depends_on:
            - app
        networks:
            - app_network

    db:
        image: mysql:8.0
        container_name: nc3_db
        restart: unless-stopped
        env_file:
            - docker-compose.env
        volumes:
            - dbdata:/var/lib/mysql
        networks:
            - app_network

    backup:
        build:
            context: .
            dockerfile: Dockerfile.backup
        container_name: nc3_backup
        environment:
            DB_HOST: db
            DB_DATABASE: ${DB_DATABASE}
            DB_USERNAME: ${DB_USERNAME}
            DB_PASSWORD: ${DB_PASSWORD}
        volumes:
            - ./backups:/backups
            - dbdata:/var/lib/mysql:ro
        depends_on:
            - db
        networks:
            - app_network

    node:
        image: node:16-alpine
        container_name: nc3_node
        working_dir: /var/www/html
        volumes:
            - ./:/var/www/html
        networks:
            - app_network

networks:
    app_network:
        driver: bridge

volumes:
    dbdata:
